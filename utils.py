import random
import torch
import numpy as np
import os

def set_seed(seed=1000):
    os.environ["PYTHONHASHSEED"] = str(seed)
    random.seed(seed)
    np.random.seed(seed)
    torch.manual_seed(seed)
    if torch.cuda.is_available():
        torch.backends.cudnn.deterministic = True
        torch.backends.cudnn.benchmark = False
def mkdir(path):
    path = path.strip()
    path = path.rstrip("\\")
    is_exists = os.path.exists(path)
    if not is_exists:
        os.makedirs(path)

#load the embedding vectors generated by ESM-2
def integer_label_protein(id):
    lz = torch.load('biogrid/'+str(id)+'.pt')
    mean_representations = lz['mean_representations']
    encoding = mean_representations[33]
    return encoding
def integer_label_peptide(id):
    lz = torch.load('biogrid/' + str(id) + '.pt')
    mean_representations = lz['mean_representations']
    encoding = mean_representations[33]
    return encoding

